/** import React, Prop Types, and classnames */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';

/** import Material UI styles, Component(s) and Icon(s) */
import { withStyles } from '@material-ui/core/styles';
import Snackbar from '@material-ui/core/Snackbar';
import SnackbarContent from '@material-ui/core/SnackbarContent';
import IconButton from '@material-ui/core/IconButton';
import CloseIcon from '@material-ui/icons/Close';

/** import configuration value needed on this component */
import green from '@material-ui/core/colors/green';
import orange from '@material-ui/core/colors/orange';
import { blueInfoColor } from '../config/colors';
import { red, white, redHover } from '../config/colors';

/**
 * set up styles for this component
 * @ignore
 * @param {object} theme
 * @returns {object} classes prop to apply styles in the component
 */
const styles = (theme) => ({
  close: {
    padding: theme.spacing.unit / 4,
    position: 'fixed',
    top: theme.spacing.unit * -2,
    right: -14,
    backgroundColor: red,
    border: `1px solid ${white}`,
    '&:hover': { backgroundColor: redHover }
  },
  success: {
    backgroundColor: green[600]
  },
  error: {
    backgroundColor: theme.palette.error.dark
  },
  info: {
    backgroundColor: blueInfoColor
  },
  warning: {
    backgroundColor: orange['A400']
  },
  message: {
    display: 'flex',
    alignItems: 'center'
  }
});

/**
 * FlashMessage is a component to show flash message on the top right of the website
 *
 * @name FlashMessage
 * @component
 * @category Common
 * @example
 * import shortid from 'shortid'
 * const message = {
 *  id: shortid.generate(),
 *  type: 'success',
 *  text: 'Welcome !'
 * }
 * return (
 *  <FlashMessage key={message.id} message={message} deleteFlashMessage={() => console.log('function to delete the message')}/>
 * )
 *
 */
class FlashMessage extends Component {
	constructor(props) {
		super(props);

		this.handleDismiss = this.handleDismiss.bind(this);
	}

  /**
   * handleDismiss is a function to remove the current flash message component that are shown on the website
   */
	handleDismiss() {
		this.props.deleteFlashMessage(this.props.message.id);
	}

	render() {
		const { classes, message } = this.props;
		const { type, text } = message;

		return (
			<div>
				<Snackbar
					anchorOrigin={{
						vertical: 'top',
						horizontal: 'right'
					}}
					open={true}
					autoHideDuration={6000}
					onClose={this.handleDismiss}
					ContentProps={{
						'aria-describedby': 'message-id'
					}}
				>
					<SnackbarContent
						className={classNames(classes[type], type)}
						aria-describedby="client-snackbar"
						message={
							<span id="client-snackbar" className={classes.message}>
								{text}
							</span>
						}
						action={[
							<IconButton
								key="close"
								aria-label="Close"
								color="inherit"
								className={classes.close}
								onClick={this.handleDismiss}
							>
								<CloseIcon fontSize="small"/>
							</IconButton>
						]}
					/>
				</Snackbar>
			</div>
		);
	}
}

FlashMessage.propTypes = {
  /**
   * classes is an object containing styles of this component, it's using withStyles features from material ui v3.
   * (see the source file to see more information about the styles)
   */
  classes: PropTypes.object.isRequired,
  /**
   * message is an object containing id, type and text property. it's used shown a message in this component.
   * id value generated by shortid package.
   * type is a string with only two accepted value: "success" or "error".
   * text is a string that containing notification message.
   */
  message: PropTypes.object.isRequired,
  /**
   * deleteFlashMessage is a function that will run when the notification is closed / dismiss (either using close button or by timer).
   */
	deleteFlashMessage: PropTypes.func.isRequired
};

export default withStyles(styles)(FlashMessage);
