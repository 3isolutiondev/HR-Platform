/** import React, PropTypes and axios */
import React from "react";
import PropTypes from 'prop-types';
import axios from 'axios';

/** import Material UI withStyles */
import { withStyles } from '@material-ui/core/styles';

/** import fontawesome icons */
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faUnlink } from '@fortawesome/free-solid-svg-icons/faUnlink';


/** import configuration value and validation helper */
import { acceptedImageFiles } from "../../../config/general";
import { primaryColor, borderColor } from "../../../config/colors";
import isEmpty from "../../../validations/common/isEmpty";

/**
 * Thumb is a component to show a thumbnail in dropzone gallery
 *
 * @name Thumb
 * @component
 * @category Common
 */
export class Thumb extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      file: '',
      hasError: false
    }

    this.onGalleryFilesChange = this.onGalleryFilesChange.bind(this);
  }

  /**
   * componentDidMount is a lifecycle function called where the component is mounted
   */
  componentDidMount() {
    if (!isEmpty(this.props.fileUrl)) {
      this.onGalleryFilesChange(this.props.fileUrl);
    }
  }

  /**
   * componentDidUpdate is a lifecycle function called where the component is updated
   * @param {object} prevProps
   */
  componentDidUpdate(prevProps) {
    if (this.props.fileUrl !== prevProps.fileUrl) {
      this.onGalleryFilesChange(this.props.fileUrl);
    }
  }

  /**
   * onGalleryFilesChange is a function to get image file by calling an api
   * @param {string} fileUrl
   */
  async onGalleryFilesChange(fileUrl) {
    await axios.get(fileUrl.replace(window.location.origin, '/api'), { responseType: 'blob' })
    .then((res) => {
      this.setState({ hasError: false });
      if (acceptedImageFiles.indexOf(res.data.type) > -1) {
        this.setState({ file: URL.createObjectURL(res.data)});
      }
    })
    .catch(err => this.setState({ hasError: !isEmpty(err) ? true : false }) );
  }

  render() {
    if (!isEmpty(this.state.file)) {
      return (<img src={this.state.file} alt={this.props.filename} className={this.props.classes.photo}/>)
    }

    if (this.state.hasError) {
      return (
        <div className={this.props.classes.pdfContainer}>
          <FontAwesomeIcon
            icon={faUnlink}
            size="10x"
            style={{ width: '100%' }}
            className={this.props.classes.disabledIcon}
          />
        </div>
      )
    }

    return null
  }
}

Thumb.propTypes = {
  /**
   * classes is a prop containing styles for this component generated by material-ui v3
   */
  classes: PropTypes.object.isRequired,
  /**
   * fileUrl is a prop containing file url
   */
  fileUrl: PropTypes.string.isRequired
}

const styles = () => ({
  photo: {
    width: '100%',
    margin: '0 auto',
    cursor: 'pointer'
  },
  pdfContainer: {
    'text-align': 'center',
    color: primaryColor,
    minWidth: 300
  },
  disabledIcon: {
    color: borderColor
  }
})

export default withStyles(styles)(Thumb);
