/** Import React, PropTypes and classnames */
import React from 'react'
import PropTypes from "prop-types";
import classnames from 'classnames';

/** Import Material UI components, styles and icons */
import { withStyles } from "@material-ui/core/styles";
import Button from '@material-ui/core/Button';
import Typography from '@material-ui/core/Typography';
import Dialog from '@material-ui/core/Dialog';
import DialogActions from '@material-ui/core/DialogActions';
import DialogContent from '@material-ui/core/DialogContent';
import DialogTitle from '@material-ui/core/DialogTitle';
import CircularProgress from '@material-ui/core/CircularProgress';

import CloseIcon from '@material-ui/icons/Close';
import DeleteIcon from '@material-ui/icons/Delete';

/** Import color set inside config/colors.js file */
import {
  primaryColor,
  white
} from '../../../config/colors';

/** Import Redux and Redux Actions */
import { connect } from "react-redux";
import {
  toggleDeleteAttention,
  removeAccountRequest
} from '../../../redux/actions/profile/deleteAccountActions';

/**
 * DeleteAccount is a component to show Delete Account component inside Profile page
 *
 * @name DeleteAccount
 * @component
 * @category Page
 * @subcategory Profile
 *
 */
const DeleteAccount = ({
  classes,
  deleteAttentionOpen,
  hasValidDeleteRequest,
  deleteRequestLoading,
  getDeleteAccountDataLoading,
  showDeleteNoteForImmaper,
  toggleDeleteAttention,
  removeAccountRequest
}) => {

  return (
    <div>
      <Button
        variant="contained"
        className={classes.deleteAccountBtn}
        fullWidth
        size="small"
        onClick={toggleDeleteAttention}
      >
        Delete My Account <DeleteIcon/>
      </Button>
      <Dialog open={deleteAttentionOpen} fullWidth maxWidth="lg" onClose={toggleDeleteAttention}>
        <DialogTitle className={classes.redText}>Deleting Account</DialogTitle>
        {!getDeleteAccountDataLoading ? (
          <DialogContent>
            <Typography variant="h6" className={classes.bold}>
              Pay special attention when entering this area!
            </Typography>
            <div className={classes.redContainer}>
              {(!hasValidDeleteRequest) && (
                <Typography variant="body1">
                  To delete your account and all information associated with it, please press the 'REMOVE ACCOUNT' button.
                </Typography>
              )}
              {(hasValidDeleteRequest) && (
                <Typography variant="body1" className={classes.bold}>
                  You have requested to delete your account. Please check your email for further instructions.
                </Typography>
              )}
              {showDeleteNoteForImmaper && (
                <Typography variant="body1" color="primary" className={classnames(classes.bold, classes.addMarginTop)}>
                  Dear iMMAP Colleague,<br/><br/>

                  Please contact the Human Resources Department (HQ) to delete your account.<br/><br/>

                  Thank you.
                </Typography>
              )}
            </div>
          </DialogContent>
        ) : (
          <DialogContent style={{ textAlign: 'center' }}>
            <CircularProgress size={22} thickness={5} color="primary"/>
          </DialogContent>
        )}
        <DialogActions>
          <Button onClick={toggleDeleteAttention} color="secondary" variant="contained">
            <CloseIcon/> Close
          </Button>
          {(!hasValidDeleteRequest && !getDeleteAccountDataLoading) && (
            <Button onClick={removeAccountRequest} disabled={deleteRequestLoading} color="primary" variant="contained">
              {deleteRequestLoading && <CircularProgress size={22} thickness={5} className={classes.loading}/>} Remove Account <DeleteIcon/>
            </Button>
          )}
        </DialogActions>
      </Dialog>
    </div>
  )
}

DeleteAccount.propTypes = {
  /**
   * classes is a prop containing styles for this component generated by material-ui v3
   */
  classes: PropTypes.object.isRequired,
  /**
   * deleteAttentionOpen is a prop containing boolean value to show Delete Attenttion modal
   */
  deleteAttentionOpen: PropTypes.bool.isRequired,
  /**
   * hasValidDeleteRequest is a prop containing boolean value to check if the user has valid delete request or not
   */
  hasValidDeleteRequest: PropTypes.bool.isRequired,
  /**
   * showDeleteNoteForImmaper is a prop containing boolean value to show deletion note for iMMAPer
   */
  showDeleteNoteForImmaper: PropTypes.bool.isRequired,
  /**
   * toggleDeleteAttention is a prop to call redux action to toggle Delete Attention modal
   */
  toggleDeleteAttention: PropTypes.func.isRequired,
  /**
   * removeAccountRequest is a prop to call redux action to create remove account request in the backend
   */
  removeAccountRequest: PropTypes.func.isRequired
}

/**
 * set up styles for this
 * @ignore
 * @param {object} theme
 * @returns {object} classes prop to apply styles in the component
 */
const styles = (theme) => {
  const defaultSpacing = theme.spacing.unit * 2;
  const tinySpacing = theme.spacing.unit / 2;

  return ({
    addMarginTop: { marginTop: defaultSpacing },
    bold: { fontWeight: 700 },
    redText: { color: 'red' },
    deleteAccountBtn: { background: "red", color: white,
      marginBottom: defaultSpacing,
      '&:hover': { color: white, background: primaryColor }
    },
    redContainer: {
      border: '1px solid red',
      padding: defaultSpacing,
      marginTop: defaultSpacing,
      borderRadius: tinySpacing
    },
    loading: { color: white, marginRight: tinySpacing }
  })
}

/**
 * set up map dispatch to props for this component
 * @ignore
 * @property {object} mapDispatchToProps - contain redux actions to be used in component via props
 */
const mapDispatchToProps = {
  toggleDeleteAttention,
  removeAccountRequest
}

/**
 * set up map state to props for this component
 * @ignore
 * @param {object} state
 * @returns {object} all needed state data inside reducer that are mapped as a prop to be used in the component
 */
const mapStateToProps = (state) => ({
  deleteAttentionOpen: state.deleteAccount.deleteAttentionOpen,
  deleteRequestLoading: state.deleteAccount.deleteRequestLoading,
  hasValidDeleteRequest: state.deleteAccount.hasValidDeleteRequest,
  getDeleteAccountDataLoading: state.deleteAccount.getDeleteAccountDataLoading,
  showDeleteNoteForImmaper: state.deleteAccount.showDeleteNoteForImmaper
})

export default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(DeleteAccount));

